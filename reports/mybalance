#!/bin/bash

# Execute getopt on the arguments passed to this program, identified by the special character $

PARSED_OPTIONS=$(getopt -n "$0" -o hm:p:u: --long "help,months=:,pi=:,user=:"  -- "$@")

# A little magic, necessary when using getopt.
eval set -- "$PARSED_OPTIONS"

# Now goes through all the options with a case and using shift to analyse 1 argument at a time.
#$1 identifies the first argument, and when we use shift we discard the first argument, so $2 becomes $1 and goes again through the case.
while true;
do
  case "$1" in
    -h|--help)
      echo "This script reports the usage of your allocation"
      echo "Usage: solreport [OPTIONS] "
      echo "   -m <num>, --months=<num>: Report usage for the last <num> months"
      echo "   -p <investor username>, --pi=<investor username>: Report usage on allocation <investor username>."
      echo "   -u <username>, --user=<username>: Report usage for user <username>. PI's can use all, to report report for all users in their allocation" 
      echo "   -h, --help: Print the help information"
      echo "Output is in CSV Format"
      echo "    General HPC Users: UserID ; Name ; Allocation Usage ; Usage in the current month; Usage for last <num> months in <num> column"
      echo "    Principal Investigators:"
      echo "              Total Allocation Usage:   UserID   Allocation Used  Allocation Limit"
      echo "              Usage for all users   :   UserID ; Name ; Allocation Usage ; Usage in the current month; Usage for last <num> months in <num> column"
      exit
      shift
      ;;
    -m | --months=* )
      shift
      if [ -n "$1" ]
      then
        if [[ "$1" -gt "12" ]] ; then
          echo "Can provide Reports for last 12 months only"
          exit
        fi
        last=$1
      fi
      shift
      ;;
    -p | --pi=*)
      shift
      if [ -n "$1" ]; then
        invest=$1
	if [[ "$invest" == "all" ]] ; then
          invest=""
        fi
       else
        invest=""
      fi
      shift
      ;;
    -u | --user=* )
      shift
      if [ -n "$1" ]; then
        investuser=$1
        if [[ "$investuser" == "all" ]] ; then
          investuser=""
        fi
      else
        investuser=""
      fi
      shift
      break
      ;;    
    --)
#      echo "Monthly Usage Report for the last $last months"
      shift
      break
      ;;
  esac
done

let nextlast=$last-1
# Get list of PIs
if [ -z $invest ]; then
  accounts=$(sshare -o Account -n | awk '{print $1}' | uniq)
else
  accounts=$invest
fi

alloclimit=-1
#start=$(date -d "-$last month" +%F-00:00:00)
#end=$(date -d "this month" +%F-00:00:00)
start=($(date -d "this month" +%Y-%m-01-00:00:00))
#end=($(date -d "today" +%F-00:00:00))
end=($(date -d "now" +%F-%T))

for i in $(seq 1 12); do
  start=(${start[@]} $(date -d "-$i month" +%Y-%m-01-00:00:00))
  let j=$i-1
  end=(${end[@]} $(date -d "-$j month" +%Y-%m-01-00:00:00))
done

if [[ "$USER" == "alp514" || "$USER" == "sma310" ]]
then
  echo "    PI        Usage           Limit"
  echo "------------------------------------"
fi

for pi in $accounts
do
  usage=$(sshare -o Account,RawUsage,GrpTRESMins -A $pi -n | awk '{print $2/60/60}')
  alloclimit=$(sshare -o Account,RawUsage,GrpTRESMins -A $pi -n | awk -F= '{print $2/60}')
  if [[ "$USER"  == "$pi" || "$USER" == "alp514" || "$USER" == "sma310" ]]
  then
    [[ "$USER"  == "$pi" ]] && echo "    PI        Usage           Limit"
    [[ "$USER"  == "$pi" ]] && echo "------------------------------------"
    echo $pi $usage $alloclimit | awk '{printf " %6s\t%12.5f\t%12.5f\n",$1,$2,$3}'
  fi
done

echo 
# Get List of users
if [ -z $investuser ] ; then
  if [ -z $invest ] ; then
    userlist=$(sshare -a -o User -n | awk '{print $1}' | sed '/^$/d' | sort | egrep -iv 'root|dam207|tcb313|ycp206' )
  else
    userlist=$(sshare -a -o Account,User -n | egrep $invest | awk '{print $2}' | sed '/^$/d' | sort )
  fi
else
  userlist=$investuser
fi

if [[ ( "$USER" == "alp514" || "$USER" == "sma310" ) &&  -z $invest ]]
  then
#  echo UserID Name Usage | awk '{printf " %6s;%35s;%15s;",$1,$2,$3}'
  echo UserID Name Department Principal Investigator Usage | awk '{printf " %6s;%35s;%35s;%15s %-14s;%15s;",$1,$2,$3,$4,$5,$6}'
else
  echo UserID Name Usage | awk '{printf " %6s;%35s;%15s;",$1,$2,$3}'
fi 

echo "This Month" | awk '{printf "  %15s; ",$0}'
echo "Last $last months" | awk '{printf " %15s;\n",$0}'

export PATH=/share/Apps/compilers/opt/spack/linux-centos8-x86_64/gcc-8.3.1/openldap/2.4.49-jqsftva/bin:${PATH}
for user in $userlist
do
  usage=($(sshare -U -u $user -n | awk '{print $1,$5/60/60}'))
  if [[ "$USER" == "${usage[0]}" || "$USER" == "alp514" || "$USER" == "sma310" ]] ;then 
    name=$(ldapsearch -x -LLL -h nis.cc.lehigh.edu -b dc=lehigh,dc=edu uid=$user | grep "cn:" | awk -F: '{printf "%s",$2}')
    if [[ "$user" == "alp514" || "$user" == "sma310" ]]
    then
      dept=$(ldapsearch -x -LLL -h ldap.lehigh.edu -b dc=lehigh,dc=edu uid=$user | grep "ou:" | awk -F: '{printf "%s",$2}')
    else
      dept=$(ldapsearch -x -LLL -h ldap.lehigh.edu -b dc=lehigh,dc=edu uid=${usage[0]} | grep "ou:" | awk -F: '{printf "%s",$2}')
    fi
    if [[ "$user" == "alp14" || "$user" == "sma310" ]]
    then
      pi=$(ldapsearch -x -LLL -h ldap.lehigh.edu -b dc=lehigh,dc=edu uid=$user | grep "ou:" | awk -F: '{printf "%32s;",$2}')
    else
      pi=$(ldapsearch -x -LLL -h ldap.lehigh.edu -b dc=lehigh,dc=edu uid=${usage[0]} | egrep -i "sn:|givenName" | awk -F: '{print $2}' | xargs | awk '{printf " %15s %-15s;",$2,$1}')
    fi

    if [[ ( "$USER" == "alp514" || "$USER" == "sma310" ) && -z $invest ]]
    then
      echo $user | awk '{printf " %6s;",$1}'
      echo $name | awk '{printf "%35s;",$0}'
      echo $dept | awk '{printf "%35s;",$0}'
      echo $pi | awk '{printf "%31s",$0}'
      echo ${usage[1]} | awk '{printf "%15.5f;", $1}'
    else
      echo $user | awk '{printf " %6s;",$1}'
      echo $name | awk '{printf "%35s;",$0}'
      echo ${usage[1]} | awk '{printf "%15.5f;", $1}'
    fi
    for i in $(seq 0 $nextlast)
    do
      monthly=$(sacct -u $user --starttime=${start[$i]} --endtime=${end[$i]} -o CPUTimeRAW -X | awk '{s+=$1}END{print s/60/60}')
      echo $monthly | awk '{printf "  %15.5f;", $1}'
    done
    monthly=$(sacct -u $user --starttime=${start[$last]} --endtime=${end[$last]} -o CPUTimeRAW -X | awk '{s+=$1}END{print s/60/60}')
    echo $monthly | awk '{printf "  %15.5f;\n", $1}'
  else
    if [[ "$USER" == "$user" ]] 
    then
      name=$(ldapsearch -x -LLL -h nis.cc.lehigh.edu -b dc=lehigh,dc=edu uid=$USER | grep "cn:" | awk -F: '{printf "%s",$2}')
      dept=$(ldapsearch -x -LLL -h ldap.lehigh.edu -b dc=lehigh,dc=edu uid=${usage[0]} | grep "ou:" | awk -F: '{printf "%s",$2}')
      pi=$(ldapsearch -x -LLL -h ldap.lehigh.edu -b dc=lehigh,dc=edu uid=${usage[0]} | egrep -i "sn:|givenName" | awk -F: '{print $2}' | xargs | awk '{printf " %15s %-15s;",$2,$    1}')
      echo $user | awk '{printf " %6s;",$1}'
      echo $name | awk '{printf "%35s;",$0}'
      echo ${usage[1]} | awk '{printf "%15.5f;", $1}'
      for i in $(seq 0 $nextlast)
      do
        monthly=$(sacct -u $user --starttime=${start[$i]} --endtime=${end[$i]} -o CPUTimeRAW -X | awk '{s+=$1}END{print s/60/60}')
        echo $monthly | awk '{printf "  %15.5f;", $1}'
      done
      monthly=$(sacct -u $user --starttime=${start[$last]} --endtime=${end[$last]} -o CPUTimeRAW -X | awk '{s+=$1}END{print s/60/60}')
      echo $monthly | awk '{printf "  %15.5f;\n", $1}'
    fi
  fi
done





